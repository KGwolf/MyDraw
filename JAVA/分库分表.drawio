<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36" version="26.1.0">
  <diagram name="第 1 页" id="89eAlUvdY-vfsUuqKLdn">
    <mxGraphModel dx="1645" dy="845" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="RwhGDpmJjXARNoensnjg-1" value="什么情况下需要用到分库分表？&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;热点数据很多，比如我们审方信息，一个小县城的1个医院，每天门诊住院都是1w次的审方，大区域审方一天的量就几百万次。任务药品表一天都是快3千万。一个月都是9亿的数据。而这1个月的数据都可能是热数据，中途可能会有修改，必须事务保证，就必须要放到mysql这种关系型数据库中。有事务的保证。&amp;nbsp;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;什么是分库分表？&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;分库、分表、既分库又分表。&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;分库解决的是单库的连接池不够问题。 分表解决的是单表数据量太大，然后查询效率慢。&amp;nbsp; 如果2者都有，就需要既分库又分表。&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;数据归档和分库分表区别？&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;分库分表​ → 解决 ​热数据的横向扩展问题​（高并发、低延迟的事务操作）。&lt;br&gt;​&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;数据归档​ → 解决 ​冷数据的存储成本和查询效率问题​（低频访问的历史数据分析）。&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;归档无法替代分库分表的事务处理能力，反之亦然。&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;分库分表和数据归档是正交的解决方案，前者解决热数据的事务与性能问题，后者解决冷数据的存储与分析问题。&lt;br&gt;​&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;归档无法替代分库分表，因为其无法满足高频事务的ACID要求；分库分表也无法替代归档，因为其存储成本高且不适合分析场景。&lt;br&gt;​&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;最佳实践是分层架构：&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;热数据层（MySQL分片） → 高并发事务。&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;温数据层（MySQL只读副本） → 近期高频查询。&lt;br&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;冷数据层（ClickHouse/ES） → 历史数据分析。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;fontStyle=1;verticalAlign=top;align=left;" parent="1" vertex="1">
          <mxGeometry x="250" y="190" width="710" height="600" as="geometry" />
        </mxCell>
        <mxCell id="RwhGDpmJjXARNoensnjg-2" value="从Mysql集群到ShardingShphere的过程：&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;1.首先Mysql 搭建主从集群。&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;主从同步数据的方式：异步复制(主节点异步发送 bin log日志给从节点，不保证一定发送成功)、半同步复制（主节点发送bin log给从节点，并且需要等待一个超时时间的间隔）。&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2.搭建Mysql高可用集群。MMM、MHA、MGR。&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;3.多数据源管理：&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;gt; Spring 提供的 AbstractRoutingDataSource。 通过ThreadLocal变量来实现快速切换目标数据库。&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;gt; Mybatis Plus 提供的 DynamicDataSource，这种用@DS注解的方式来实现的。减少了业务代码的入侵。&lt;font style=&quot;color: rgb(255, 0, 0);&quot;&gt;它的源代码是怎么来实现的呢&lt;/font&gt;？支持的事务是怎么样的事务，如何支持分布式事务呢？&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&amp;gt; ShardingSphere 框架的使用。&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;fontStyle=1;verticalAlign=top;align=left;fillColor=#f8cecc;strokeColor=#b85450;" parent="1" vertex="1">
          <mxGeometry x="1100" y="260" width="690" height="360" as="geometry" />
        </mxCell>
        <mxCell id="RwhGDpmJjXARNoensnjg-3" value="&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;ShardingSphere的介绍和使用：&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;分为ShardingJDBC 客户端分库分表 和 ShardingProxy 服务端分库分表。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ShardingJDBC 支持各种实现jdbc协议的数据库，需要在我们的程序里面去配置 数据源、各种分片策略等。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;ShardingProxy 目前只支持实现了mysql、pgsql协议的数据库，是一个程序，可以看做是一个数据库，我们程序只需要连接它就行了，它自己的服务里面来弄这些复杂的配置。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;核心概念：&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;1.虚拟库：应用程序只需要向操作但数据源一样访问这个虚拟库。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;2.真实库：保存在ShardingShpereDataSource实例中，由框架自己决定使用哪个真实库。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;3.逻辑表：应用程序直接操作的逻辑表。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;4.真实表：实际保存数据的表，表明不需要跟逻辑表一致，但是表结构需要一致。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;5.分布式主键生成算法：ID唯一，可自定义。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;6.分片策略：由分片键和分片算法组成。如果没有分片键，框架只能进行全路由，分片算法 是根据分片键如何寻找到真实的库和表。也可自定义。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: transparent;&quot;&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;其它：读写分离库、广播表、绑定表、影子库。&lt;br&gt;&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;fontStyle=1;verticalAlign=top;align=left;" parent="1" vertex="1">
          <mxGeometry x="260" y="850" width="700" height="530" as="geometry" />
        </mxCell>
        <mxCell id="g64Nd9Q6wCNAMY9zqfhi-1" value="&lt;div&gt;&lt;div style=&quot;background-color:#2b2b2b;color:#a9b7c6&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:12.0pt;&quot;&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;应用配置&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.application.name&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;demo&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;server.port&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;9005&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;打印&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;SQL&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.props.sql-show &lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;true&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.main.allow-bean-definition-overriding &lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;= &lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;true&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# ----------------&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;数据源配置&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;指定对应的真实库&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.names&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;test0,test1&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;配置真实库&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test0.type&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;com.alibaba.druid.pool.DruidDataSource&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test0.driver-class-name&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;com.mysql.cj.jdbc.Driver&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test0.url&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;jdbc:mysql://localhost:3306/test?serverTimezone=UTC&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test0.username&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;root&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test0.password&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;123456&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test1.type&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;com.alibaba.druid.pool.DruidDataSource&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test1.driver-class-name&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;com.mysql.cj.jdbc.Driver&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test1.url&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;jdbc:mysql://localhost:3306/test2?serverTimezone=UTC&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test1.username&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;root&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.datasource.test1.password&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;123456&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;#------------------------&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;分布式序列算法配置&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;雪花算法，生成&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;Long&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;类型主键。&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.type&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;SNOWFLAKE&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.key-generators.alg_snowflake.props.worker.id&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;1&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;指定分布式主键生成策略&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.key-generate-strategy.column&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;aid&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.key-generate-strategy.key-generator-name&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;alg_snowflake&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;#-----------------------&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;配置实际分片节点&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.actual-data-nodes&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;test$-&amp;gt;{0..1}.account_$-&amp;gt;{1..2}&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;#-----------------------&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;配置分库策略，按&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;aid&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;取模&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.database-strategy.standard.sharding-column&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;aid&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.database-strategy.standard.sharding-algorithm-name&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;account_db_alg&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.sharding-algorithms.account_db_alg.type&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;MOD&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.sharding-algorithms.account_db_alg.props.sharding-count&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;2&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;给&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;account&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;表指定分表策略&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;  standard-&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;按单一分片键进行精确或范围分片&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.table-strategy.standard.sharding-column&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;aid&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.table-strategy.standard.sharding-algorithm-name&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;account_tbl_alg&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;分表策略&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;-INLINE&lt;/span&gt;&lt;span style=&quot;color:#808080;font-family:&#39;Courier New&#39;,monospace;&quot;&gt;：按单一分片键分表&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.type&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;INLINE&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color:#cc7832;&quot;&gt;spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.props.algorithm-expression&lt;/span&gt;&lt;span style=&quot;color:#808080;&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color:#6a8759;&quot;&gt;account_$-&amp;gt;{aid%2+1}&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;fontStyle=1;verticalAlign=top;align=left;" parent="1" vertex="1">
          <mxGeometry x="1740" y="860" width="1100" height="880" as="geometry" />
        </mxCell>
        <mxCell id="g64Nd9Q6wCNAMY9zqfhi-2" value="右边是一个简单的sharding-jdbc的配置：&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;有2个表test、test2，它们里面分别有accout、account_1、account_2 这3张表，需要用带下划线的这2张表和2个库来进行分库分表。注意，配置里面的test0和test1命名是有讲究的。要跟数据库的分片算法有关系，右边的只是根据2来取模，所以要么后缀是0，要么是1，所以只能是xxx0、xxx1。坑了半天。&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;fontStyle=1;verticalAlign=top;align=left;" parent="1" vertex="1">
          <mxGeometry x="1020" y="840" width="700" height="140" as="geometry" />
        </mxCell>
        <mxCell id="IS5SeAK-RxhiQx-ziOcB-1" value="&lt;div&gt;select * from account where aid = xxx，这个sql会自己寻找具体在哪个库哪个表。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;INLINE 策略：就是简单的一个表达式。 支持 等于、 支持 in 查询。 但是必须带上aid，如果不带aid，那么就会全扫描，2个库2张表，就是4个sql，但是后面5.x版本优化成2个sql，同一个库里面的sql会用 UNION ALL 来优化。 应该极力避免全扫描。 in 查询虽然是支持的，但是in里面的值如果都在一个分片上，那么就1个sql就行。如果in里面的不止1个分片，那么它就偷懒，也去全分片路由去扫描查询。这算是一个坑！所以用in查询要保证都在一个分片上。不能随便乱写sql。&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;INLINE策略，如果是between呢，就直接给你抛异常。。报错里面提到可以添加一个参数，在分库策略那一级，allow-range-query-with-inline-sharding=true。 但是加上之后，只是不报错而已，还是走的全分片扫描。&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;那什么策略支持这种范围查询呢？ 还有就是多条件查询怎么办？inline也是支持多条件的，但是出了分片键之外的条件，是原封不动的写到sql里面的。那如果其它条件也想走分片呢？complex_inline可以。&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;COMPLEX_INLINE 策略：使用多个分片键 来参与分片。&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;分片策略&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Standard 标准分片策略：&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Complex 复合分片策略：&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Inline 行表达式分片策略：&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;Hint 强制指定分片位置，不依赖分片键策略：&lt;br&gt;&lt;/div&gt;&lt;div&gt;分片算法&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;MOD 取模算法&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;HASH 哈希算法&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;INTERVAL 时间范围算法&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;COMPLEX_INLINE 复合算法&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;CLASS_BASED 自定义算法&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;white-space: pre;&quot;&gt;&#x9;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;fontStyle=1;verticalAlign=top;align=left;" parent="1" vertex="1">
          <mxGeometry x="990" y="1020" width="730" height="690" as="geometry" />
        </mxCell>
        <mxCell id="hcxP66knWNozSNGNkHIm-1" value="&lt;pre style=&quot;font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 12pt; color: rgb(169, 183, 198);&quot;&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&lt;font color=&quot;#808080&quot;&gt;complex_inline：分库的策略不变,注意，这里不应该用name，应该用一个userid来进行分片运算&lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; font-size: 12pt; color: rgb(169, 183, 198);&quot;&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;&lt;font color=&quot;#808080&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;#&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128); font-family: &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;给&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;account&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128); font-family: &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;表指定分表策略&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;  standard-&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128); font-family: &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;按单一分片键进行精确或范围分片&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.table-strategy.complex.sharding-column&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;aid,name&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;spring.shardingsphere.rules.sharding.tables.account.table-strategy.complex.sharding-algorithm-name&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;account_tbl_alg&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;# &lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128); font-family: &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;分表策略&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;-INLINE&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128); font-family: &amp;quot;Courier New&amp;quot;, monospace;&quot;&gt;：按单一分片键分表&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.type&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;=COMPLEX_&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;INLINE&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(204, 120, 50);&quot;&gt;spring.shardingsphere.rules.sharding.sharding-algorithms.account_tbl_alg.props.algorithm-expression&lt;/span&gt;&lt;span style=&quot;color: rgb(128, 128, 128);&quot;&gt;=&lt;/span&gt;&lt;span style=&quot;color: rgb(106, 135, 89);&quot;&gt;account_$-&amp;gt;{(aid+name+1)%2+1}&lt;/span&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;fontStyle=1;verticalAlign=top;align=left;" parent="1" vertex="1">
          <mxGeometry x="1760" y="1800" width="1170" height="250" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
