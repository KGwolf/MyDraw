<mxfile host="app.diagrams.net" modified="2023-04-04T08:37:44.248Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36" etag="FrHF519YXjH-3S981Syl" version="21.1.2" type="github">
  <diagram name="第 1 页" id="j0T0W_XY4i96COsHRtta">
    <mxGraphModel dx="1793" dy="955" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="gD5YT0Y3-eSmoMF3_J99-2" value="一开始load的时候类型是GenericBeanDefinition&lt;br&gt;&lt;br&gt;通过getMergedLocalBeanDefinition()方法合并了父类的beanDefinition后，类型变成了RootBeanDefinition&lt;br&gt;&lt;br&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="1350" y="1780" width="470" height="230" as="geometry" />
        </mxCell>
        <mxCell id="wJDUlHO4tCs9Kh0-4UFC-2" value="" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1330" y="420" width="1260" height="1030" as="geometry" />
        </mxCell>
        <mxCell id="BxTBeL077zcQ3UxvTALr-2" value="&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;# Spring&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;核心就是refresh方法&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;1.prepareRefresh：给上下文赋一些初始值。做准备工作。&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;2.&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;obtainFreshBeanFactory&lt;/font&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;：创建一个DefaultListableBeanFactory。加载BeanDefinition，其中loadBeanDefinitions()，有很多重载，直到doLoadBeanDefinitions()，加载配置文件，registerBeanDefinitions()，再doRegisterBeanDefinitions()，再parseBeanDefinitions()，这里2个分支，parseDefaultElement()，parseCustomElement()，一个是默认标签，一个是自定义标签。最终是给2个地方赋值：beanDefinitionMap（一个Map集合），beanDefinitionNames（一个存放名字的集合）。&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px; border-color: var(--border-color);&quot;&gt;其中parseCustomElement()，除了进行自己定义的标签会处理，如果还有&amp;lt;compent-scan&amp;gt;标签，进行处理：parseCustomElement()，通过&lt;/font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;scanner.doScan(包路径),，先根据路径找到路径下面的所有文件（类文件），然后看看是否有对应的注解（@Component，@Service等），找到则加入BeanDefinitionMap和name。同时调用&lt;/span&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;registerComponents()方法，进行&lt;/font&gt;&lt;/span&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;组件注册（包括注册一些内部的注解后置处理器，触发注册事件）：&lt;/font&gt;ConfigurationClassPostProcessor、AutowiredAnnotationBeanPostProcessor、CommonAnnotationBeanPostProcessor等，将这几个一起加入到BeanDefinitionMap中。&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;3.&lt;/span&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;prepareBeanFactory：给BeanFactory赋一些初始值，&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;向BeanFactory中添加一些BeanPostProcessor，&lt;/font&gt;&lt;/b&gt;&lt;/font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;ignoreDependencyInterface&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;registerResolvableDependency。&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;4.postProcessBeanFactory：可以注册一些特殊的BeanPostProcessors,默认没有实现，丢给子类去进行扩展，比如Spring Mvc。&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;5.&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;invokeBeanFactoryPostProcessors&lt;/font&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;：调用各种的BFPP，创建BFPP类。&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;blockquote style=&quot;margin: 0 0 0 40px; border: none; padding: 0px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;一：在BeanDefinationMap 中查找有没有BeanDefinitionRegistryPostProcessor类型的BeanName&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;1.匹配实现了&lt;/font&gt;PriorityOrdered接口的&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;2.匹配实现了Ordered接口的&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;3.匹配都没有实现的&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;匹配到了之后，&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;调用beanFactory.getBean()来&lt;/span&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;创建BFPP对象&lt;/font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;，并且调用对象的postProcessBeanDefinitionRegistry()方法，这个方法的作用大概就是增强BeanDefinition，给它赋值一些其它的东西。&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;举个例子：我们之前loadBeanDefinition的时候，有注册过一个组件&lt;/font&gt;internalConfigurationAnnotationProcessor，它的对象类型是ConfigurationClassPostProcessor，实现了BeanDefinitionRegistryPostProcessor接口，所以会调用这个类的postProcessBeanDefinitionRegistry()方法，它里面的实现作用主要是：&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;在beanDefinition中找到有注解的类，然后去处理@PropertySource、@ComponentScan、@Import、@ImportResource、@Bean&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;处理的结果就是给beanDefinitaion赋值，或者给环境变量增加值等。&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;二：在BeanDefinitionMap中查找有没有BeanFactoryPostProcessor类型的BeanName。步骤跟上面的第一步类似，只不过这种多是我们&lt;b&gt;自己定义的BFPP类。&lt;/b&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;font-size: 18px; border-color: var(--border-color);&quot;&gt;6.&lt;/font&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;registerBeanPostProcessors&lt;/font&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;：注册BPP。&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;创建BPP的对象，但是不会调用方法。&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;跟上面第5个方法invokeBeanFactoryPostProcessor类似，查找BeanDefinitionMap中有没有&lt;b&gt;实现BeanPostProcessor的BeanName&lt;/b&gt;。调用getBean()来创建实体，唯一不同的是，这里不会调用方法。&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;7.&lt;/span&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;initMessageSource&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;8.initApplicationEventMuliticaster&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;9.onRefresh&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;10.registerListeners&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;11.&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;finishBeanFactoryInitialization&lt;/font&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;：开始准备实例化对象。&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;调用preInstantiateSingletons()方法，判断是不是FactoryBean，如果是，看右边的流程。&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;如果不是，则走geBean()---&amp;gt;doGetBean()----&amp;gt;createBean()----&amp;gt;doCreateBean()的流程。&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;doGetBean()：&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;1.getSingleton()从缓存中取bean对象，如果没有就标记对象为创建中状态，判断是否是单例对象，如果是，就再getSingleton()，如果还是没有，就调用createBean()。&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;createBean()：&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;1.mbdToUse.prepareMethodOverrides()，设置一个状态位，跟lookup-method、override-method标签有关系。&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;2.resolveBeforeInstantiation()，&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;允许BPP返回一个代理对象&lt;/font&gt;&lt;/b&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;。如果创建成功，就直接返回了，创建对象结束！&lt;/span&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;3.doCreateBean()&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt; &lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;doCreateBean()：&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;1.createBeanInstance()：根据beanname获取Class对象，判断是否是supplier或者factory-method，如果是，就走单独的创建实例流程返回。如果不是，&lt;b&gt;再判断选取一个合适的构造函数&lt;/b&gt;，过程较复杂，如果调用了instantiateBean，再getInstantiationStrategy().instantiate()，获取实例化策略，再进行实例化，最后返回一个实例化的对象，这个对象仅仅是实例化，并未进行初始化。&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;span style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;2.&lt;/font&gt;applyMergedBeanDefinitionPostProcessors()：&lt;/span&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;允许BPP去修改mergedBeanDefinition，&lt;/font&gt;&lt;font style=&quot;font-size: 18px; background-color: initial; border-color: var(--border-color);&quot;&gt;循环调用之前实例化的这些BeanPostProcessor的&lt;/font&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;postProcessMergedBeanDefinition方法，&lt;b&gt;AOP也跟这里有关系？&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;首先CommonAnnotationBeanPostProcessor类，调用ppMBD方法，会掉用父类InitDestroyAnnotationBeanPostProcessor的ppMBD方法，里面构建生命周期元数据，主要是&lt;b&gt;@PostConstruct和@PreDestroy&lt;/b&gt;注解的查找，然后再给BeanDefinition的属性赋值（externallyManagedInitMethods、externallyManagedDestroyMethods）。然后再调用findResourceMetadata()方法，查找@Resource注解，给externallyManagedConfigMembers属性赋值。&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;其次，AutowiredAnnotationBeanPostProcessor类，调用ppMBD方法，findAutowiringMetadata()，查找&lt;b&gt;@Autowire和@Value&lt;/b&gt;注解，&lt;/span&gt;&lt;font style=&quot;font-size: 19px; background-color: initial;&quot;&gt;然后给&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;font style=&quot;font-size: 19px;&quot;&gt;externallyManagedConfigMembers属性赋值。&lt;/font&gt;&lt;br&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color);&quot;&gt;&lt;pre style=&quot;border-color: var(--border-color);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;populateBean():给实例化对象赋值。&lt;/font&gt;&lt;/b&gt;&lt;/pre&gt;&lt;pre style=&quot;border-color: var(--border-color);&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font style=&quot;border-color: var(--border-color);&quot;&gt;3.如果是纯注解的方式，流程是怎么走的呢？怎么查找beandefinition的信息？look-up标签的效果如何用注解的方式来实现？&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;text-align: justify; border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color);&quot;&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="80" y="420" width="1170" height="2960" as="geometry" />
        </mxCell>
        <mxCell id="3Tz9ayiB8aLOj15XIJGB-1" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;parseDefaultElement()：包括了以下标签：&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;IMPORT_ELEMENT、&lt;/span&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;ALIAS_ELEMENT、&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;BEAN_ELEMENT、&lt;/span&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;NESTED_BEANS_ELEMENT&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1361" y="510" width="529" height="150" as="geometry" />
        </mxCell>
        <mxCell id="3Tz9ayiB8aLOj15XIJGB-2" value="&lt;pre style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;doScan是如何扫描的？&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;findCandidateComponents(包名)方法，&lt;/font&gt;首先找到包名下面的所有类文件，isCandidateComponent方法判断是否是组件，&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px;&quot;&gt;其实就是看类上面的注解是否有@Component，像@Service等这种，其实也是继承了@Component注解的，都算。&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1351" y="700" width="1029" height="120" as="geometry" />
        </mxCell>
        <mxCell id="3Tz9ayiB8aLOj15XIJGB-3" value="&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;registerComponents：注册组件&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;registerAnnotationConfigProcessors()方法，就是判断BeanFactory里面的BeanDefinition里面有没有那些beanname，&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;如果没有，就调用registerPostProcessor()方法，注册进入BeanDefinition里面。&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;beandefinitionsMap加入如下信息：&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;internalConfigurationAnnotationProcessor---&amp;gt;ConfigurationClassPostProcessor&lt;/font&gt;&lt;br&gt;&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;pre style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;internalAutowiredAnnotationProcessor    ---&amp;gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;AutowiredAnnotationBeanPostProcessor&lt;/font&gt;&lt;span style=&quot;font-size: 13px;&quot;&gt;    &lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;pre style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;internalCommonAnnotationProcessor       ---&amp;gt;&lt;/span&gt;&lt;b style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 22px;&quot;&gt;CommonAnnotationBeanPostProcessor(这个很重要，后面有用到！)&lt;/font&gt;&lt;/b&gt;&lt;/pre&gt;&lt;pre style=&quot;font-size: 18px;&quot;&gt;&lt;pre style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial; font-family: Helvetica; white-space: normal;&quot;&gt;internalEventListenerProcessor&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ---&amp;gt;EventListenerMethodProcessor&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;internalEventListenerFactory            ---&amp;gt;DefaultEventListenerFactory&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1351" y="840" width="1219" height="460" as="geometry" />
        </mxCell>
        <mxCell id="3Tz9ayiB8aLOj15XIJGB-4" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;parseCustomElement&lt;/font&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;()：包括但不限于以下标签：&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 18px;&quot;&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;context:component-scan、以及各种自定义的标签&lt;/font&gt;&lt;/pre&gt;&lt;/div&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1930" y="524" width="420" height="120" as="geometry" />
        </mxCell>
        <mxCell id="wJDUlHO4tCs9Kh0-4UFC-3" value="&lt;b&gt;loadBeanDefinition方法重要的地方&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontSize=23;" parent="1" vertex="1">
          <mxGeometry x="1731" y="440" width="419" height="20" as="geometry" />
        </mxCell>
        <mxCell id="wJDUlHO4tCs9Kh0-4UFC-4" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;所以最后obtainFreshBeanFactory执行完成之后，BeanDefinition有2块内容：&lt;br&gt;1.是扫描包路径下自己定义的有对应注解的类，&lt;br&gt;&lt;div style=&quot;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;2.内部注册的一些组件类。&lt;/span&gt;&lt;/div&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="1431" y="1320" width="680" height="90" as="geometry" />
        </mxCell>
        <mxCell id="gD5YT0Y3-eSmoMF3_J99-1" value="BeanPostProcessor接口的依赖关系是怎样的？" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="2780" y="580" width="480" height="190" as="geometry" />
        </mxCell>
        <mxCell id="gD5YT0Y3-eSmoMF3_J99-4" value="FactoryBean的创建流程&lt;br&gt;&lt;br&gt;&lt;pre style=&quot;&quot;&gt;getObjectForBeanInstance：该方法主要是为了factorybean。&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;传入的对象有可能是FactoryBean对象，不是需要的实例对象。&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;align=left;" parent="1" vertex="1">
          <mxGeometry x="1320" y="2040" width="690" height="190" as="geometry" />
        </mxCell>
        <mxCell id="gD5YT0Y3-eSmoMF3_J99-5" value="三级缓存和循环依赖问题&lt;br&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="1420" y="3260" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="gD5YT0Y3-eSmoMF3_J99-6" value="BPP如何实现 在doCreateBean()之前返回一个代理对象？" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="1350" y="2260" width="550" height="150" as="geometry" />
        </mxCell>
        <mxCell id="gD5YT0Y3-eSmoMF3_J99-7" value="Spring中创建对象有哪些方式？&lt;br&gt;1.反射&lt;br&gt;2.supplier&lt;br&gt;3.factory-method&lt;br&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="1341" y="2470" width="549" height="220" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="UeAGvA_bwLcHGkh69qGp-1" target="UeAGvA_bwLcHGkh69qGp-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="UeAGvA_bwLcHGkh69qGp-1" target="UeAGvA_bwLcHGkh69qGp-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="UeAGvA_bwLcHGkh69qGp-1" target="UeAGvA_bwLcHGkh69qGp-5" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;BeanPostProcessor接口&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2640" y="1100" width="310" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-9" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="UeAGvA_bwLcHGkh69qGp-2" target="UeAGvA_bwLcHGkh69qGp-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="UeAGvA_bwLcHGkh69qGp-2" target="UeAGvA_bwLcHGkh69qGp-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.75;entryDx=0;entryDy=0;" parent="1" source="UeAGvA_bwLcHGkh69qGp-2" target="UeAGvA_bwLcHGkh69qGp-12" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-2" value="&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;InstantiationAwareBeanPostProcessor接口&lt;/font&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3170" y="1112" width="430" height="78" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-3" value="&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;DestructionAwareBeanPostProcessor接口&lt;/font&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3170" y="940" width="460" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="UeAGvA_bwLcHGkh69qGp-4" target="UeAGvA_bwLcHGkh69qGp-13" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="4430" y="1035" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-4" value="&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;SmartInstantiationAwareBeanPostProcessor接口&lt;/font&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3936" y="1000" width="514" height="70" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-5" value="&lt;pre style=&quot;&quot;&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;MergedBeanDefinitionPostProcessor接口&lt;/font&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3170" y="1270" width="450" height="80" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-11" value="&lt;pre style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;ImportAwareBeanPostProcessor类&lt;/font&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3942" y="1100" width="508" height="50" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-12" value="&lt;pre style=&quot;border-color: var(--border-color);&quot;&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;CommonAnnotationBeanPostProcessor类&lt;/font&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="3942" y="1170" width="508" height="40" as="geometry" />
        </mxCell>
        <mxCell id="UeAGvA_bwLcHGkh69qGp-13" value="&lt;pre style=&quot;border-color: var(--border-color);&quot;&gt;&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;AutowiredAnnotationBeanPostProcessor类&lt;/font&gt;&lt;/pre&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="4530" y="1010" width="520" height="50" as="geometry" />
        </mxCell>
        <mxCell id="MSwICJZJJ-8O9ppRQRhp-3" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="0R7P9N3aFObu-qyjlIBD-2" target="MSwICJZJJ-8O9ppRQRhp-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="0R7P9N3aFObu-qyjlIBD-2" value="创建对象的时候，如何选取合适的构造函数？&lt;br&gt;以及lookup-method和override-method是在什么时候处理的呢？&lt;br&gt;&lt;br&gt;doCreateBean方法执行到createBeanInstance()那里，会先判断supplier和factory-method，然后determineConstructorsFromBeanPostProcessors()，&lt;b&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;这里是找出不用默认构造方法进行实例化的构造函数！！！！！&lt;/font&gt;，&lt;/b&gt;从bean后置处理器中为自动装配寻找构造方法, &lt;b&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;有且仅有一个有参构造或者有且仅有@Autowired注解构造&lt;/font&gt;&lt;/b&gt;：&lt;br&gt;&lt;span style=&quot;&quot;&gt; &lt;/span&gt;首先找到实现了InstantiationAwareBeanPostProcessor的那些BPP实例，循环调用它们的determineCandidateConstructors()，返回的是一个构造器类，" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;align=left;" parent="1" vertex="1">
          <mxGeometry x="1370" y="2750" width="750" height="360" as="geometry" />
        </mxCell>
        <mxCell id="N0wu8gUbkJhDh__TXsF7-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;applyMergedBeanDefinitionPostProcessors为什么要在实例化之后再调用呢？为什么不能在loadBeanDefinition的时候就一起处理了？&lt;br&gt;&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;中途会修改？具体的解释？&lt;/font&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="2160" y="2400" width="410" height="240" as="geometry" />
        </mxCell>
        <mxCell id="MSwICJZJJ-8O9ppRQRhp-1" value="Spring 源码里面一共有几种方式创建对象？&lt;br&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="1405.5" y="3450" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="MSwICJZJJ-8O9ppRQRhp-5" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="MSwICJZJJ-8O9ppRQRhp-2" target="MSwICJZJJ-8O9ppRQRhp-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="MSwICJZJJ-8O9ppRQRhp-2" value="determineConstructorsFromBeanPostProcessors，&lt;font style=&quot;font-size: 25px;&quot;&gt;&lt;b&gt;这里是找出不用默认构造方法进行实例化的构造函数！！！！！&lt;/b&gt;&lt;/font&gt;&lt;br&gt;1.首先，如果只有一个有参构造(无Autowired)，且方法参数是基础类型，那么必须使用@Value给参数注解。否则会报错！因为注入的时候找不到参数值进行注入，如果是引用类型，则会再进行解析依赖，进行创建对象。&lt;br&gt;&lt;br&gt;2.无参构造、有参构造混合，且无任何@Autowire注解时，那么这一步是找不到构造器的。意思是默认走无参构造。&lt;br&gt;&lt;br&gt;3.无参构造、有参构造混合，且有1个@Autowire require=true注解时，返回被注解的那个。&lt;br&gt;&lt;br&gt;4.有多个@Autowire require=true注解，会报错，识别不了你到底想用哪个。Found constructor with &#39;required&#39; Autowired annotation already&lt;br&gt;&lt;br&gt;5.如果有@Autowire注解都是require=false的话，那么这里会把所有的为false的找出来。并且无参构造也会找出来。&lt;br&gt;&lt;br&gt;&lt;b&gt;&lt;font style=&quot;font-size: 25px;&quot;&gt;如果出现了@Autowire require=true的注解，那么就只能有一个Autowire，后面的不管是require=true还是false，都会报错！&lt;/font&gt;&lt;/b&gt;" style="whiteSpace=wrap;html=1;fontSize=22;align=left;rounded=1;" parent="1" vertex="1">
          <mxGeometry x="2280" y="2686.25" width="1250" height="487.5" as="geometry" />
        </mxCell>
        <mxCell id="MSwICJZJJ-8O9ppRQRhp-4" value="那么这么多个构造函数，到底选择用哪个进行实例化呢？&lt;br&gt;" style="whiteSpace=wrap;html=1;fontSize=22;align=left;rounded=1;" parent="1" vertex="1">
          <mxGeometry x="2780" y="3280" width="250" height="300" as="geometry" />
        </mxCell>
        <mxCell id="dgufYrilfiPxplGniSbw-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;学习工作流&lt;br&gt;Activity工作流引擎&lt;br&gt;&lt;/b&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="330" y="120" width="340" height="90" as="geometry" />
        </mxCell>
        <mxCell id="OvKJ4s5Kua3Mngv0WgQv-2" value="&lt;font style=&quot;font-size: 69px;&quot;&gt;AOP&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="40" y="3960" width="4600" height="110" as="geometry" />
        </mxCell>
        <mxCell id="OvKJ4s5Kua3Mngv0WgQv-4" value="AOP 的几个专业术语代表什么意思？" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="190" y="4290" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="OvKJ4s5Kua3Mngv0WgQv-5" value="AOP的创建过程？" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="1050" y="4290" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="OvKJ4s5Kua3Mngv0WgQv-6" value="JDK和CGLIB的源码区别" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="1940" y="4290" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="OvKJ4s5Kua3Mngv0WgQv-7" value="Spring中什么时候用JDK创建代理对象？&lt;br&gt;什么时候用CGLIB创建对象？" style="rounded=1;whiteSpace=wrap;html=1;fontSize=22;" parent="1" vertex="1">
          <mxGeometry x="2630" y="4290" width="440" height="140" as="geometry" />
        </mxCell>
        <mxCell id="wgn3H3yoNKP2OQnmM37o-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;JDK:&lt;br&gt;被代理类必须实现一个接口。调用Proxy.newProxyInstance()方法来创建，其中需要传入3个参数：&lt;br&gt;1.被代理类的类加载器。&lt;br&gt;2.被代理类实现的接口集合。&lt;br&gt;3.InvocationHandler接口实现类（可以用匿名内部类，或者Lambda表达式），重写invoke方法。其中invoke方法有3个参数：&lt;/font&gt;&lt;font style=&quot;font-size: 19px;&quot;&gt;invoke(Object proxy, Method method, Object[] args)，proxy为创建好的代理对象，method为要调用的方法，args是调用的参数。&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="250" y="4830" width="820" height="490" as="geometry" />
        </mxCell>
        <mxCell id="wgn3H3yoNKP2OQnmM37o-2" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;Proxy&lt;/font&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1150" y="4870" width="750" height="130" as="geometry" />
        </mxCell>
        <mxCell id="wgn3H3yoNKP2OQnmM37o-3" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;+&amp;nbsp;proxyClassCache:&amp;nbsp;&lt;b&gt;&lt;font color=&quot;#ff0000&quot;&gt;WeakCache&lt;/font&gt;&lt;/b&gt;&amp;lt;ClassLoader, Class&amp;lt;?&amp;gt;[], Class&amp;lt;?&amp;gt;&amp;gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wgn3H3yoNKP2OQnmM37o-2" vertex="1">
          <mxGeometry y="26" width="750" height="54" as="geometry" />
        </mxCell>
        <mxCell id="wgn3H3yoNKP2OQnmM37o-4" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" parent="wgn3H3yoNKP2OQnmM37o-2" vertex="1">
          <mxGeometry y="80" width="750" height="8" as="geometry" />
        </mxCell>
        <mxCell id="wgn3H3yoNKP2OQnmM37o-5" value="&lt;font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;+&amp;nbsp;newProxyInstance(&lt;font color=&quot;#ff0000&quot;&gt;ClassLoader loader,Class&amp;lt;?&amp;gt;[] interfaces,&lt;/font&gt;&lt;/span&gt;&lt;/font&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 18px;&quot;&gt;InvocationHandler h&lt;/font&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px; background-color: initial;&quot;&gt;): Object&lt;/span&gt;&lt;span style=&quot;font-size: 12pt; font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; color: rgb(204, 120, 50);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" parent="wgn3H3yoNKP2OQnmM37o-2" vertex="1">
          <mxGeometry y="88" width="750" height="42" as="geometry" />
        </mxCell>
        <mxCell id="wgn3H3yoNKP2OQnmM37o-6" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;这里使用了弱引用，这个跟ThreadLocal的弱引用一样？ThreadLocal的原理是什么？&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="1060" y="4680" width="500" height="80" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-1" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;WeakCache&amp;lt;K,P,V&amp;gt;&lt;/font&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1160" y="5051" width="660" height="210" as="geometry">
            <mxRectangle x="1130" y="5030" width="210" height="40" as="alternateBounds" />
          </mxGeometry>
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-2" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;+&amp;nbsp;refQueue&lt;span style=&quot;background-color: initial;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;ReferenceQueue&amp;lt;K&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px; border-color: var(--border-color);&quot;&gt;+&amp;nbsp;map&lt;/span&gt;&lt;font style=&quot;font-size: 18px; border-color: var(--border-color); background-color: initial;&quot;&gt;:&lt;/font&gt;&lt;/font&gt;&lt;/font&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;nbsp;&lt;/span&gt;ConcurrentMap&amp;lt;Object, ConcurrentMap&amp;lt;Object, Supplier&amp;lt;V&amp;gt;&amp;gt;&amp;gt;&lt;br&gt;&lt;/font&gt;&lt;font&gt;&lt;span style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;+&amp;nbsp;reverseMap&lt;/span&gt;&lt;font&gt;&lt;span style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;/font&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;ConcurrentMap&amp;lt;Supplier&amp;lt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;V&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;, &lt;/span&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;Boolean&amp;gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px; border-color: var(--border-color);&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;subKeyFactory&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;/font&gt;BiFunction&amp;lt;K, P, ?&amp;gt;&lt;font&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px; border-color: var(--border-color);&quot;&gt;+&amp;nbsp;&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;valueFactory&lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;&lt;font&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;:&amp;nbsp;&lt;/span&gt;&lt;/font&gt;BiFunction&amp;lt;K, P, V&amp;gt;&lt;font&gt;&lt;br&gt;&lt;/font&gt;&lt;/span&gt;&lt;/span&gt;&lt;font color=&quot;#ff0000&quot; style=&quot;border-color: var(--border-color); font-size: 18px;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-1">
          <mxGeometry y="26" width="660" height="124" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-3" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-1">
          <mxGeometry y="150" width="660" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-4" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;+ get(K,P): V&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-1">
          <mxGeometry y="158" width="660" height="52" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-7" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="FS2boHwgYnbtg82Xrflb-5" target="FS2boHwgYnbtg82Xrflb-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-5" value="&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;newProxyInstance&lt;/font&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="211" y="5870" width="170" height="60" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-9" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" edge="1" parent="1" source="FS2boHwgYnbtg82Xrflb-6" target="FS2boHwgYnbtg82Xrflb-8">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-6" value="&lt;pre style=&quot;&quot;&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;getProxyClass0&lt;/font&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;查找缓存，有就返回对象类型&lt;/span&gt;&lt;/pre&gt;&lt;pre style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;没有就生成字节码文件&lt;/span&gt;&lt;/pre&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="491" y="5850" width="315" height="100" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-8" value="&lt;pre style=&quot;font-size: 18px;&quot;&gt;proxyClassCache.get(loader, interfaces)&lt;/pre&gt;" style="whiteSpace=wrap;html=1;rounded=1;" vertex="1" parent="1">
          <mxGeometry x="983.5" y="5870" width="447.5" height="60" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-10" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;KeyFactory&lt;/font&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="2050" y="4900" width="370" height="70" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-12" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-10">
          <mxGeometry y="26" width="370" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-13" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;+&amp;nbsp;apply&lt;span style=&quot;background-color: initial;&quot;&gt;(ClassLoader,Class&amp;lt;?&amp;gt;[]): Object&lt;/span&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-10">
          <mxGeometry y="34" width="370" height="36" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-17" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;ProxyClassFactory&lt;/font&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="2540" y="4900" width="490" height="140" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-18" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;-&amp;nbsp;proxyClassNamePrefix&lt;span style=&quot;background-color: initial;&quot;&gt;: String&lt;br&gt;&lt;/span&gt;-&amp;nbsp;nextUniqueNumber: AutomicLong&lt;br&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-17">
          <mxGeometry y="26" width="490" height="54" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-19" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-17">
          <mxGeometry y="80" width="490" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-20" value="&lt;font style=&quot;font-size: 17px;&quot;&gt;+&amp;nbsp;apply&lt;span style=&quot;border-color: var(--border-color);&quot;&gt;(ClassLoader,Class&amp;lt;?&amp;gt;[]): Class&amp;lt;?&amp;gt;&lt;/span&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-17">
          <mxGeometry y="88" width="490" height="52" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-21" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;CacheKey&amp;lt;K&amp;gt;&lt;/font&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="2530" y="5120" width="390" height="130" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-22" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;- hash: int&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-21">
          <mxGeometry y="26" width="390" height="26" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-23" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-21">
          <mxGeometry y="52" width="390" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-24" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;+ valueOf(K,ReferenceQueue&amp;lt;K&amp;gt;): Object&lt;br&gt;-&amp;nbsp; CacheKey(K,ReferenceQueue&amp;lt;K&amp;gt;): void 构造函数&lt;br&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-21">
          <mxGeometry y="60" width="390" height="70" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-25" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;CacheValue&amp;lt;V&amp;gt;&lt;/font&gt;" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="3040" y="5120" width="390" height="130" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-26" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;- hash: int&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-25">
          <mxGeometry y="26" width="390" height="26" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-27" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-25">
          <mxGeometry y="52" width="390" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-28" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;- CacheValue(V): void 构造函数&lt;br&gt;&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-25">
          <mxGeometry y="60" width="390" height="70" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-29" value="Factory" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;fontSize=16;" vertex="1" parent="1">
          <mxGeometry x="1940" y="5051" width="500" height="240" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-30" value="- key: K&lt;br&gt;- parameter: P&lt;br&gt;- subKey: Object&lt;br&gt;- valuesMap: ConcurrentMap&amp;lt;Object,Supplier&amp;lt;V&amp;gt;&amp;gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=16;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-29">
          <mxGeometry y="26" width="500" height="104" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-31" value="" style="line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;fontSize=16;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-29">
          <mxGeometry y="130" width="500" height="8" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-32" value="+ Factory(K,P,ConcurrentMap&amp;lt;Object,Supplier&amp;lt;V&amp;gt;&amp;gt;): void 构造方法&lt;br&gt;&lt;font color=&quot;#ff0000&quot;&gt;+ get(): V&lt;/font&gt;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;fontSize=16;" vertex="1" parent="FS2boHwgYnbtg82Xrflb-29">
          <mxGeometry y="138" width="500" height="102" as="geometry" />
        </mxCell>
        <mxCell id="FS2boHwgYnbtg82Xrflb-33" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;Supplier接口的意义是什么？&lt;br&gt;&lt;br&gt;&lt;/font&gt;" style="rounded=1;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="1670" y="4676" width="500" height="80" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
