<mxfile host="app.diagrams.net" modified="2022-12-02T09:04:23.861Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36" etag="5tACrFernn9OrFmSH5N6" version="20.6.0" type="github">
  <diagram id="dQEuB5v866ZaRb3VbNek" name="第 1 页">
    <mxGraphModel dx="2844" dy="1524" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="zNigKXp1gIyEoJ-Kyh-0-1" value="&lt;font style=&quot;font-size: 24px;&quot;&gt;分布式锁&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;" parent="1" vertex="1">
          <mxGeometry x="220" y="50" width="2260" height="130" as="geometry" />
        </mxCell>
        <mxCell id="zNigKXp1gIyEoJ-Kyh-0-2" value="分布式锁用于多个进程以互斥的行为访问共享资源" style="rounded=0;whiteSpace=wrap;html=1;fontSize=24;" parent="1" vertex="1">
          <mxGeometry x="340" y="340" width="570" height="80" as="geometry" />
        </mxCell>
        <mxCell id="zNigKXp1gIyEoJ-Kyh-0-3" value="&lt;font style=&quot;font-size: 18px;&quot;&gt;&lt;b&gt;实现一个分布式锁的最低要求：&lt;/b&gt;&lt;br&gt;&lt;br&gt;1.同一时刻，只能有一个客户端获得锁。&lt;br&gt;&lt;br&gt;2.能释放死锁，客户端获取到锁之后，宕机或者分区，别的客户端也能获取到锁。&lt;br&gt;&lt;br&gt;3.容错性，只要服务端大多数节点都正常时（n/2+1），客户端就能正常获取或者释放锁。&lt;br&gt;&lt;/font&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fontSize=24;align=left;" parent="1" vertex="1">
          <mxGeometry x="960" y="260" width="725" height="240" as="geometry" />
        </mxCell>
        <mxCell id="zNigKXp1gIyEoJ-Kyh-0-4" value="Redis分布式锁" style="rounded=0;whiteSpace=wrap;html=1;fontSize=18;" parent="1" vertex="1">
          <mxGeometry x="50" y="610" width="2490" height="130" as="geometry" />
        </mxCell>
        <mxCell id="zNigKXp1gIyEoJ-Kyh-0-7" value="&lt;pre style=&quot;text-align: justify; box-sizing: border-box; border-width: 0px; border-style: solid; border-color: rgb(229, 231, 235); --tw-translate-x:0; --tw-translate-y:0; --tw-rotate:0; --tw-skew-x:0; --tw-skew-y:0; --tw-scale-x:1; --tw-scale-y:1; --tw-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness:proximity; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width:0px; --tw-ring-offset-color:#fff; --tw-ring-color:rgb(59 130 246 / 0.5); --tw-ring-offset-shadow:0 0 #0000; --tw-ring-shadow:0 0 #0000; --tw-shadow:0 0 #0000; --tw-shadow-colored:0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; margin-top: 1.71429em; margin-bottom: 1.71429em; overflow-x: auto; line-height: 1.71429; padding: 1.25rem; border-radius: 0.5rem !important; --tw-bg-opacity:1  !important;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; border-width: 0px; border-style: solid; border-color: rgb(229, 231, 235); --tw-translate-x:0; --tw-translate-y:0; --tw-rotate:0; --tw-skew-x:0; --tw-skew-y:0; --tw-scale-x:1; --tw-scale-y:1; --tw-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness:proximity; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width:0px; --tw-ring-offset-color:#fff; --tw-ring-color:rgb(59 130 246 / 0.5); --tw-ring-offset-shadow:0 0 #0000; --tw-ring-shadow:0 0 #0000; --tw-shadow:0 0 #0000; --tw-shadow-colored:0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; border-radius: 0px; padding: 0px; line-height: inherit; --tw-text-opacity:1; background-image: none;&quot; class=&quot;hljs-code&quot;&gt;&lt;b&gt;&lt;font style=&quot;font-size: 24px;&quot; color=&quot;#ff0000&quot;&gt;SET resource_name my_random_value NX PX 30000&lt;/font&gt;&lt;/b&gt;&lt;/span&gt;&lt;/pre&gt;" style="rounded=1;whiteSpace=wrap;html=1;fontSize=18;align=left;" parent="1" vertex="1">
          <mxGeometry x="130" y="1055" width="590" height="70" as="geometry" />
        </mxCell>
        <mxCell id="zNigKXp1gIyEoJ-Kyh-0-8" value="&lt;pre style=&quot;box-sizing: border-box; border-width: 0px; border-style: solid; border-color: rgb(229, 231, 235); --tw-translate-x:0; --tw-translate-y:0; --tw-rotate:0; --tw-skew-x:0; --tw-skew-y:0; --tw-scale-x:1; --tw-scale-y:1; --tw-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness:proximity; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width:0px; --tw-ring-offset-color:#fff; --tw-ring-color:rgb(59 130 246 / 0.5); --tw-ring-offset-shadow:0 0 #0000; --tw-ring-shadow:0 0 #0000; --tw-shadow:0 0 #0000; --tw-shadow-colored:0 0 #0000; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; margin-top: 1.71429em; margin-bottom: 1.71429em; overflow-x: auto; line-height: 1.71429; padding: 1.25rem; border-radius: 0.5rem !important; --tw-bg-opacity:1  !important;&quot;&gt;&lt;br&gt;&lt;/pre&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontSize=18;fontColor=#000000;" parent="1" vertex="1">
          <mxGeometry x="460" y="725" width="60" height="150" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=18;" edge="1" parent="1" source="eD6SpByhmocLM3qwxnjk-1" target="eD6SpByhmocLM3qwxnjk-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-1" value="&lt;div style=&quot;font-size: 18px; line-height: 220%;&quot;&gt;nx: not exists，如果key不存在，设置一个key value。过期时间为30s。&lt;/div&gt;&lt;div style=&quot;font-size: 18px; line-height: 220%;&quot;&gt;设置的my_random_value值必须每个客户端都不一样才行，可以使用时间戳+客户端ID，不是绝对安全，但是大多数情况下够用了。&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="100" y="1195" width="640" height="120" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.669;entryY=0.011;entryDx=0;entryDy=0;entryPerimeter=0;fontSize=18;" edge="1" parent="1" source="eD6SpByhmocLM3qwxnjk-2" target="eD6SpByhmocLM3qwxnjk-5">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-2" value="&lt;div style=&quot;font-size: 18px; line-height: 220%;&quot;&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;使用Lua脚本解锁分布式锁（删除对应的key）：&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;if redis.call(&quot;get&quot;,KEYS[1]) == ARGV[1] then&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&amp;nbsp; &amp;nbsp; return redis.call(&quot;del&quot;,KEYS[1])&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;else&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&amp;nbsp; &amp;nbsp; return 0&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;end&lt;/div&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;align=left;" vertex="1" parent="1">
          <mxGeometry x="800" y="1055" width="430" height="260" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-3" value="&lt;div style=&quot;font-size: 18px; line-height: 220%;&quot;&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;单节点Redis做分布式锁的问题：&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;单节点&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;redis可能会宕机或者分区（总之就是不可用），这样肯定不行哇，还是要保证我们的服务可用，CAP中的A。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;那么我们可以做一个主备集群（可用哨兵），在主机不可用的时候，备机能顶上去。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;但是这样会有一个问题：Redis的主备是基于异步复制，那么很有可能在同步锁的数据之前就宕机了。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;这时候从机升上来就没有锁的数据。那么其他客户端就能获取到锁了，不符合同一时间只能有1个客户端获取到锁的条件。&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;line-height: 220%;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fillColor=#fff2cc;strokeColor=#d6b656;align=left;" vertex="1" parent="1">
          <mxGeometry x="1490" y="1075" width="970" height="220" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-5" value="&lt;span style=&quot;&quot;&gt;获取锁的客户端执行完业务后，可以使用Lua脚本来删除key。&lt;/span&gt;&lt;br style=&quot;&quot;&gt;&lt;span style=&quot;&quot;&gt;若客户端获取锁之后宕机或者分区了，那么只有等待超时时间过了自己删除。&lt;/span&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;fontSize=18;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="430" y="1395" width="640" height="90" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-8" value="单实例Redis的实现" style="rounded=1;whiteSpace=wrap;html=1;fontSize=18;" vertex="1" parent="1">
          <mxGeometry x="150" y="875" width="1120" height="100" as="geometry" />
        </mxCell>
        <mxCell id="eD6SpByhmocLM3qwxnjk-9" value="多主Redis分布式锁" style="rounded=1;whiteSpace=wrap;html=1;fontSize=18;" vertex="1" parent="1">
          <mxGeometry x="90" y="1670" width="1180" height="110" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
